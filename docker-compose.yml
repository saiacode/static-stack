version: '3.8'

networks:
  ingress:
    external: true
    name: traefik-public

volumes:
  filebrowser_data:
  apache:


services:
  apache:
    image: "httpd:2.4"
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 100M
      replicas: 2
      placement:
        constraints:
          #- node.labels.gluster == volume00
          - node.labels.static == production
          - node.role == worker
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${NAME}-static-http.rule=Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)
        - traefik.http.routers.${NAME}-static-http.entrypoints=http
        - traefik.http.routers.${NAME}-static-http.middlewares=https-redirect
        - traefik.http.routers.${NAME}-static-https.rule=Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)
        - traefik.http.routers.${NAME}-static-https.entrypoints=https
        - traefik.http.routers.${NAME}-static-https.tls=true
        - traefik.http.routers.${NAME}-static-https.tls.certresolver=le
        - traefik.http.services.${NAME}-static.loadbalancer.server.port=${WEB_SERVER_PORT-80}
    volumes:
      - apache:/usr/local/apache2/htdocs/
    networks:
      - ingress
      
  filebrowser:
    image: hurlenko/filebrowser
    deploy:
      replicas: 1
      placement:
        constraints:
          #- node.labels.gluster == volume00
          - node.labels.static == production
          - node.role == worker
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${NAME}-filebrowser-http.rule=Host(`cloud.saia.ar`) && PathPrefix(`/${NAME}`)"
        - traefik.http.routers.${NAME}-filebrowser-http.entrypoints=http
        - traefik.http.routers.${NAME}-filebrowser-http.middlewares=https-redirect
        - traefik.http.routers.${NAME}-filebrowser-https.rule=Host(`cloud.saia.ar`) && PathPrefix(`/${NAME}`)"
        - traefik.http.routers.${NAME}-filebrowser-https.entrypoints=https
        - traefik.http.routers.${NAME}-filebrowser-https.tls=true
        - traefik.http.routers.${NAME}-filebrowser-https.tls.certresolver=le
        - traefik.http.services.${NAME}-filebrowser.loadbalancer.server.port=${FB_PORT-80}
    labels:
      # The labels are useful for Traefik only
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      # Get the routes from http
      - "traefik.http.routers.files_${NAME}_router.rule=Host(`cloud.saia.ar`) && PathPrefix(`/${NAME}`)"
      - "traefik.http.routers.files_${NAME}_router.entrypoints=web"
        # Redirect these routes to https
      - "traefik.http.middlewares.files_${NAME}_redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.files_${NAME}_router.middlewares=files_${NAME}_redirect-to-https@docker"
      # Get the routes from https
      - "traefik.http.routers.files_${NAME}_router-secured.rule=Host(`cloud.saia.ar`) && PathPrefix(`/${NAME}`)"
      - "traefik.http.routers.files_${NAME}_router-secured.entrypoints=web-secure"
      # Apply autentificiation with http challenge
      - "traefik.http.routers.files_${NAME}_router-secured.tls=true"
      - "traefik.http.routers.files_${NAME}_router-secured.tls.certresolver=myhttpchallenge"
    environment:
      FB_BASEURL: "/${NAME}/"
    volumes:
      - apache:/data/
      - filebrowser_data:/config
    networks:
      - ingress   
  


    
